{
  "_args": [
    [
      {
        "raw": "microevent.ts@~0.1.1",
        "scope": null,
        "escapedName": "microevent.ts",
        "name": "microevent.ts",
        "rawSpec": "~0.1.1",
        "spec": ">=0.1.1 <0.2.0",
        "type": "range"
      },
      "J:\\Projects\\youconnect\\node_modules\\worker-rpc"
    ]
  ],
  "_from": "microevent.ts@~0.1.1",
  "_hasShrinkwrap": false,
  "_id": "microevent.ts@0.1.1",
  "_location": "/microevent.ts",
  "_nodeVersion": "8.11.3",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/microevent.ts_0.1.1_1558101960185_0.7749836764516471"
  },
  "_npmUser": {
    "name": "dirtyhairy",
    "email": "cnspeckn@googlemail.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "microevent.ts@~0.1.1",
    "scope": null,
    "escapedName": "microevent.ts",
    "name": "microevent.ts",
    "rawSpec": "~0.1.1",
    "spec": ">=0.1.1 <0.2.0",
    "type": "range"
  },
  "_requiredBy": [
    "/worker-rpc"
  ],
  "_resolved": "https://registry.npmjs.org/microevent.ts/-/microevent.ts-0.1.1.tgz",
  "_shasum": "70b09b83f43df5172d0205a63025bce0f7357fa0",
  "_shrinkwrap": null,
  "_spec": "microevent.ts@~0.1.1",
  "_where": "J:\\Projects\\youconnect\\node_modules\\worker-rpc",
  "author": {
    "name": "Christian Speckner",
    "email": "cnspeckn@googlemail.com",
    "url": "https://github.com/DirtyHairy/"
  },
  "bugs": {
    "url": "https://github.com/DirtyHairy/microevent/issues"
  },
  "dependencies": {},
  "description": "Zero cost events",
  "devDependencies": {
    "mocha": "~6.1.4",
    "typescript": "~3.4.5",
    "typings": "^2.1.1"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-jo1OfR4TaEwd5HOrt5+tAZ9mqT4jmpNAusXtyfNzqVm9uiSYFZlKM1wYL4oU7azZW/PxQW53wM0S6OR1JHNa2g==",
    "shasum": "70b09b83f43df5172d0205a63025bce0f7357fa0",
    "tarball": "https://registry.npmjs.org/microevent.ts/-/microevent.ts-0.1.1.tgz",
    "fileCount": 18,
    "unpackedSize": 89520,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc3r/ICRA9TVsSAnZWagAAHM4P/icrRf+nhqx1gTYLjG1Y\nTZX3VpHZHah22DjL4QN0r2hKML8J7Lkgg/MFDdC9zwLSxB8GIQCB5PtpQ09J\nIN24sCUExry16B3hmiAAUyRL9ul5xMATxmknHX0i0M4dlEPFpQWwIc+59I3O\nd3gyIwGxUyRckRfM+5sE5eVAh3Tntuzu7UL6eiW09KvwqsKyvTK4F7AxH1t8\n0OoWFgo/rLrQPExcw4zmkl9ER9iLueIkxFIJTGH203bc/G1mHarugExwIjec\nY2CqfXti8zsJ5mfccNBlMr2fqVde7mGCK9jLpHpE3Qw9lcReI/cks+fOBFEo\n9fckbK1o8R8LG9xaYggAhfck2FeCb24atoTCyphdlM8D/4bzN+Ixtiv47ysS\niDrGhAhjFAof6mGJPFl83ehC3+2TndanwtqIKfId3v35KWCD60KMgu+eaUic\nSikK2NoVVU+jOxZrLoi13x5BB327suXH6P9wVZHkaoFGXF/s08B8IZp4/4vO\nG3QUrh2Hb1JsoOYaz03AZefaliycAGoybzTFfSXZBD95kGqUH91/4H7SPnOP\nyftyXHZZo+GkWxCy22mJQUPAZGqtkf1wpqfID0X/UFk4UhrEny9MLhij2IAC\np3lKrxco50zN845zyXKVyLjbKMwsvOVcd7noEwkzDF/gc3y5ke4VUO6sOAIf\n2lSJ\r\n=uEYT\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "gitHead": "c9069d6ddd3a565802d79777ce9bf313e8c8d06d",
  "homepage": "https://github.com/DirtyHairy/microevent#readme",
  "keywords": [
    "events",
    "performance"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "dirtyhairy",
      "email": "cnspeckn@googlemail.com"
    }
  ],
  "name": "microevent.ts",
  "optionalDependencies": {},
  "readme": "[![Build Status](https://travis-ci.org/DirtyHairy/microevent.svg?branch=master)](https://travis-ci.org/DirtyHairy/microevent)\n[![npm version](https://badge.fury.io/js/microevent.ts.svg)](https://badge.fury.io/js/microevent.ts)\n\n# What is it?\n\nThis package implements an event system with minimal dispatch overhead. Instead\nof recording handlers bound to an event in dynamic data structures, this library\nbinds the handlers to autogenerated code. This enables the VM to inline the\nhandler invocation and generate code that is just as fast as invoking the handlers\ndirectly.\n\nIn a (completely unscientific) benchmark, this library performs bettern than\nNodeJS events in terms of event dispatch calls per second by about two orders\nof magnitude.\n\n# How to use it?\n\n## Installation\n\nYou can install the library into your project via npm\n\n    npm install microevent.ts\n\nThe library is written in Typescript and will work in any environment that\nsupports ES5. No external typings are required for using this library with\nTypescript (version >= 2).\n\n## Importing\n\nES5 / CommonJS\n\n    var Event = require('microevent.ts').Event;\n\nES6\n\n    import {Event} from 'microevent.ts';\n\nTypescript\n\n    import {Event, EventInterface} from 'microevent.ts';\n\nThe `EventInterface` covers only the client side of an event, that is adding\nand removing handlers.\n\n##  API\n\n### Creating\n\nES5/ES6\n\n    const event = new Event();\n\nTypescript\n\n    const event = new Event<PayloadT>();\n\nCreate a new event that will dispatch a payload of type `PayloadT`.\n\n### Dispatching\n\n    event.dispatch(payload);\n\nThis will call all handlers in the order they were registered, passing `payload`\nas first argument.\n\n**IMPORTANT** `dispatch` is a property that refers to dynamically generated code. \n**DO NOT KEEP ANY REFERENCES** to `dispatch` as adding and removing handlers\nwill invalidate them.\n\n### Registering handlers\n\n    event.addHandler(handler, context);\n\n`context` is an optional parameter that will be passed to the handler on\neach invocation.\n\n### Removing handlers\n\n    event.removeHandler(handler, context);\n\nBoth `handler` and `context` must be identical to the values used when registering\nthe handler in the first place.\n\n### Checking for handlers\n\n    event.isHandlerAttached(handler, context)\n\nThis will check whether a handler was attached in a given context.\n\n    event.hasHandlers\n\n`true` if the event has any handlers attached, false otherwise.\n\n# License\n\nFeel free to use this library under the conditions of the MIT license.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/DirtyHairy/microevent.git"
  },
  "scripts": {
    "prepublish": "tsc",
    "pretest": "typings install && tsc -p tsconfig.test.json",
    "test": "mocha -R spec -u tdd test"
  },
  "types": "lib/index.d.ts",
  "version": "0.1.1"
}
