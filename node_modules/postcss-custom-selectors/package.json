{
  "_args": [
    [
      {
        "raw": "postcss-custom-selectors@^5.1.2",
        "scope": null,
        "escapedName": "postcss-custom-selectors",
        "name": "postcss-custom-selectors",
        "rawSpec": "^5.1.2",
        "spec": ">=5.1.2 <6.0.0",
        "type": "range"
      },
      "J:\\Projects\\youconnect\\node_modules\\postcss-preset-env"
    ]
  ],
  "_from": "postcss-custom-selectors@^5.1.2",
  "_hasShrinkwrap": false,
  "_id": "postcss-custom-selectors@5.1.2",
  "_location": "/postcss-custom-selectors",
  "_nodeVersion": "10.10.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/postcss-custom-selectors_5.1.2_1537475375383_0.6067958786731751"
  },
  "_npmUser": {
    "name": "jonathantneal",
    "email": "jonathantneal@hotmail.com"
  },
  "_npmVersion": "6.4.1",
  "_phantomChildren": {
    "indexes-of": "1.0.1",
    "uniq": "1.0.1"
  },
  "_requested": {
    "raw": "postcss-custom-selectors@^5.1.2",
    "scope": null,
    "escapedName": "postcss-custom-selectors",
    "name": "postcss-custom-selectors",
    "rawSpec": "^5.1.2",
    "spec": ">=5.1.2 <6.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/postcss-preset-env"
  ],
  "_resolved": "https://registry.npmjs.org/postcss-custom-selectors/-/postcss-custom-selectors-5.1.2.tgz",
  "_shasum": "64858c6eb2ecff2fb41d0b28c9dd7b3db4de7fba",
  "_shrinkwrap": null,
  "_spec": "postcss-custom-selectors@^5.1.2",
  "_where": "J:\\Projects\\youconnect\\node_modules\\postcss-preset-env",
  "author": {
    "name": "Jonathan Neal",
    "email": "jonathantneal@hotmail.com"
  },
  "bugs": {
    "url": "https://github.com/postcss/postcss-custom-selectors/issues"
  },
  "contributors": [
    {
      "name": "yisi"
    },
    {
      "name": "Maxime Thirouin"
    }
  ],
  "dependencies": {
    "postcss": "^7.0.2",
    "postcss-selector-parser": "^5.0.0-rc.3"
  },
  "description": "Use Custom Selectors in CSS",
  "devDependencies": {
    "@babel/core": "^7.1.0",
    "@babel/plugin-syntax-dynamic-import": "^7.0.0",
    "@babel/preset-env": "^7.1.0",
    "babel-eslint": "^9.0.0",
    "eslint": "^5.6.0",
    "eslint-config-dev": "^2.0.0",
    "postcss-tape": "^2.2.0",
    "pre-commit": "^1.2.2",
    "rollup": "^0.66.1",
    "rollup-plugin-babel": "^4.0.3"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-DSGDhqinCqXqlS4R7KGxL1OSycd1lydugJ1ky4iRXPHdBRiozyMHrdu0H3o7qNOCiZwySZTUI5MV0T8QhCLu+w==",
    "shasum": "64858c6eb2ecff2fb41d0b28c9dd7b3db4de7fba",
    "tarball": "https://registry.npmjs.org/postcss-custom-selectors/-/postcss-custom-selectors-5.1.2.tgz",
    "fileCount": 8,
    "unpackedSize": 103004,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbpAMwCRA9TVsSAnZWagAASv4P/3obNBMUBkhKb1DMTe19\n7EoiPkZu9aWfmADRgaYMAyi24E97PRswzAIInj2+FstSofT91lPPHSNbGqTp\npAVdkUkslnvysa5MyEPGUELEKSJ5QiuYfOVaBoq66ian6L5JhRbsP464L1li\nNAtWSzdzWh04VWLsECNMPHmCy77PXavTIKu3TE6CrcPyESJe0kNYkApMN58o\nbQHweZIpsuzTdL+kcG6rGot/TDq1pquelohvQZv7TcO0QTq46MoC60njCZM/\n8nt4k63+H3cl0xlXJOyC4p3lZhWmZNp98UFXM0PQaYj5ULuMn2Zc/j9CfuOJ\nD3N7jWR+gyvKcpyTIGa3WErOSGs4QaUv8gJHMM3kAEiVbbmYfXC/X+SloQWO\nzykVMclCoeS2n9cJ/o3juF6Oqu09OqF+c9Cd3CHvOTBkoHA9elIUvS7wVhn9\ncfcx4GBMaq+mORIkIDM4XkZ4I1a1VCXTfg698/cbbhn5/HFYMuoMqOdVuYyS\noLE0GPX6HF2JhmUucr0Af1MBXEM//7O3sRCGFpLXDmhjx4PILynANrRHa3gn\nyVMJrewsFcu+LOwz6UdDYosWTi62Ez9zxQVcug6arsFWc3hrA/JIS8qkRHl9\nweRa9M6jP2ieqy3nMz7tpDki3zZ2aeR37+0LLZkc+2E0Ns1vUoasREhP2F37\nCnZQ\r\n=izHW\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=6.0.0"
  },
  "eslintConfig": {
    "extends": "dev",
    "parser": "babel-eslint"
  },
  "files": [
    "index.cjs.js",
    "index.cjs.js.map",
    "index.es.mjs",
    "index.es.mjs.map"
  ],
  "gitHead": "4a422f0eaba5b47fd53abe36e92f9092ad63858f",
  "homepage": "https://github.com/postcss/postcss-custom-selectors#readme",
  "keywords": [
    "postcss",
    "css",
    "postcss-plugin",
    "custom",
    "selectors",
    "w3c",
    "csswg",
    "extensions",
    "declarative",
    "rule",
    "atrule",
    "at-rule",
    "specification"
  ],
  "license": "MIT",
  "main": "index.cjs.js",
  "maintainers": [
    {
      "name": "jonathantneal",
      "email": "jonathantneal@hotmail.com"
    },
    {
      "name": "moox",
      "email": "m@moox.io"
    },
    {
      "name": "semigradsky",
      "email": "semigradskyd@gmail.com"
    },
    {
      "name": "yisi",
      "email": "yiorsi@gmail.com"
    }
  ],
  "module": "index.es.mjs",
  "name": "postcss-custom-selectors",
  "optionalDependencies": {},
  "readme": "# PostCSS Custom Selectors [<img src=\"https://postcss.github.io/postcss/logo.svg\" alt=\"PostCSS\" width=\"90\" height=\"90\" align=\"right\">][postcss]\n\n[![NPM Version][npm-img]][npm-url]\n[![CSS Standard Status][css-img]][css-url]\n[![Build Status][cli-img]][cli-url]\n[![Support Chat][git-img]][git-url]\n\n[PostCSS Custom Selectors] lets you use Custom Selectors in CSS, following the\n[CSS Extensions] specification.\n\n```pcss\n@custom-selector :--heading h1, h2, h3;\n\narticle :--heading + p {\n  margin-top: 0;\n}\n\n/* becomes */\n\narticle h1 + p, article h2 + p, article h3 + p {}\n```\n\n## Usage\n\nAdd [PostCSS Custom Selectors] to your project:\n\n```bash\nnpm install postcss-custom-selectors --save-dev\n```\n\nUse [PostCSS Custom Selectors] to process your CSS:\n\n```js\nconst postcssCustomSelectors = require('postcss-custom-selectors');\n\npostcssCustomSelectors.process(YOUR_CSS /*, processOptions, pluginOptions */);\n```\n\nOr use it as a [PostCSS] plugin:\n\n```js\nconst postcss = require('postcss');\nconst postcssCustomSelectors = require('postcss-custom-selectors');\n\npostcss([\n  postcssCustomSelectors(/* pluginOptions */)\n]).process(YOUR_CSS /*, processOptions */);\n```\n\n[PostCSS Custom Selectors] runs in all Node environments, with special instructions for:\n\n| [Node](INSTALL.md#node) | [PostCSS CLI](INSTALL.md#postcss-cli) | [Webpack](INSTALL.md#webpack) | [Create React App](INSTALL.md#create-react-app) | [Gulp](INSTALL.md#gulp) | [Grunt](INSTALL.md#grunt) |\n| --- | --- | --- | --- | --- | --- |\n\n## Options\n\n### preserve\n\nThe `preserve` option determines whether custom selectors and rules using\ncustom selectors should be preserved in their original form.\n\n```pcss\n@custom-selector :--heading h1, h2, h3;\n\narticle :--heading + p {\n  margin-top: 0;\n}\n\n/* becomes */\n\narticle h1 + p, article h2 + p, article h3 + p {}\n\narticle :--heading + p {}\n```\n\n### importFrom\n\nThe `importFrom` option specifies sources where custom selectors can be\nimported from, which might be CSS, JS, and JSON files, functions, and directly\npassed objects.\n\n```js\npostcssCustomSelectors({\n  importFrom: 'path/to/file.css' // => @custom-selector :--heading h1, h2, h3;\n});\n```\n\n```pcss\narticle :--heading + p {\n  margin-top: 0;\n}\n\n/* becomes */\n\narticle h1 + p, article h2 + p, article h3 + p {}\n```\n\nMultiple sources can be passed into this option, and they will be parsed in the\norder they are received. JavaScript files, JSON files, functions, and objects\nwill need to namespace custom selectors using the `customProperties` or\n`custom-properties` key.\n\n```js\npostcssCustomSelectors({\n  importFrom: [\n    'path/to/file.css',\n    'and/then/this.js',\n    'and/then/that.json',\n    {\n      customSelectors: { ':--heading': 'h1, h2, h3' }\n    },\n    () => {\n      const customProperties = { ':--heading': 'h1, h2, h3' };\n\n      return { customProperties };\n    }\n  ]\n});\n```\n\n### exportTo\n\nThe `exportTo` option specifies destinations where custom selectors can be\nexported to, which might be CSS, JS, and JSON files, functions, and directly\npassed objects.\n\n```js\npostcssCustomSelectors({\n  exportTo: 'path/to/file.css' // @custom-selector :--heading h1, h2, h3;\n});\n```\n\nMultiple destinations can be passed into this option, and they will be parsed\nin the order they are received. JavaScript files, JSON files, and objects will\nneed to namespace custom selectors using the `customProperties` or\n`custom-properties` key.\n\n```js\nconst cachedObject = { customSelectors: {} };\n\npostcssCustomSelectors({\n  exportTo: [\n    'path/to/file.css',   // @custom-selector :--heading h1, h2, h3;\n    'and/then/this.js',   // module.exports = { customSelectors: { ':--heading': 'h1, h2, h3' } }\n    'and/then/this.mjs',  // export const customSelectors = { ':--heading': 'h1, h2, h3' } }\n    'and/then/that.json', // { \"custom-selectors\": { \":--heading\": \"h1, h2, h3\" } }\n    cachedObject,\n    customProperties => {\n      customProperties    // { ':--heading': 'h1, h2, h3' }\n    }\n  ]\n});\n```\n\n[cli-img]: https://img.shields.io/travis/postcss/postcss-custom-selectors.svg\n[cli-url]: https://travis-ci.org/postcss/postcss-custom-selectors\n[css-img]: https://cssdb.org/badge/custom-selectors.svg\n[css-url]: https://cssdb.org/#custom-selectors\n[git-img]: https://img.shields.io/badge/support-chat-blue.svg\n[git-url]: https://gitter.im/postcss/postcss\n[npm-img]: https://img.shields.io/npm/v/postcss-custom-selectors.svg\n[npm-url]: https://www.npmjs.com/package/postcss-custom-selectors\n\n[CSS Extensions]: https://drafts.csswg.org/css-extensions/#custom-selectors\n[PostCSS]: https://github.com/postcss/postcss\n[PostCSS Custom Selectors]: https://github.com/postcss/postcss-custom-selectors\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/postcss/postcss-custom-selectors.git"
  },
  "scripts": {
    "prepublishOnly": "npm test",
    "pretest": "rollup -c .rollup.js --silent",
    "test": "echo 'Running tests...'; npm run test:js && npm run test:tape",
    "test:js": "eslint *.js lib/*.js --cache --ignore-path .gitignore --quiet",
    "test:tape": "postcss-tape"
  },
  "version": "5.1.2"
}
