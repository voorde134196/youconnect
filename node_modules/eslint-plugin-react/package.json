{
  "_args": [
    [
      {
        "raw": "eslint-plugin-react@7.14.3",
        "scope": null,
        "escapedName": "eslint-plugin-react",
        "name": "eslint-plugin-react",
        "rawSpec": "7.14.3",
        "spec": "7.14.3",
        "type": "version"
      },
      "J:\\Projects\\youconnect\\node_modules\\react-scripts"
    ]
  ],
  "_from": "eslint-plugin-react@7.14.3",
  "_hasShrinkwrap": false,
  "_id": "eslint-plugin-react@7.14.3",
  "_location": "/eslint-plugin-react",
  "_nodeVersion": "12.4.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/eslint-plugin-react_7.14.3_1563834911132_0.17226353359652702"
  },
  "_npmUser": {
    "name": "yannickcr",
    "email": "yannick.croissant+npm@gmail.com"
  },
  "_npmVersion": "6.9.0",
  "_phantomChildren": {
    "esutils": "2.0.3"
  },
  "_requested": {
    "raw": "eslint-plugin-react@7.14.3",
    "scope": null,
    "escapedName": "eslint-plugin-react",
    "name": "eslint-plugin-react",
    "rawSpec": "7.14.3",
    "spec": "7.14.3",
    "type": "version"
  },
  "_requiredBy": [
    "/react-scripts"
  ],
  "_resolved": "https://registry.npmjs.org/eslint-plugin-react/-/eslint-plugin-react-7.14.3.tgz",
  "_shasum": "911030dd7e98ba49e1b2208599571846a66bdf13",
  "_shrinkwrap": null,
  "_spec": "eslint-plugin-react@7.14.3",
  "_where": "J:\\Projects\\youconnect\\node_modules\\react-scripts",
  "author": {
    "name": "Yannick Croissant",
    "email": "yannick.croissant+npm@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/yannickcr/eslint-plugin-react/issues"
  },
  "dependencies": {
    "array-includes": "^3.0.3",
    "doctrine": "^2.1.0",
    "has": "^1.0.3",
    "jsx-ast-utils": "^2.1.0",
    "object.entries": "^1.1.0",
    "object.fromentries": "^2.0.0",
    "object.values": "^1.1.0",
    "prop-types": "^15.7.2",
    "resolve": "^1.10.1"
  },
  "description": "React specific linting rules for ESLint",
  "devDependencies": {
    "@types/eslint": "^4.16.6",
    "@types/estree": "0.0.39",
    "@types/node": "^12.0.0",
    "babel-eslint": "^8.2.6",
    "coveralls": "^3.0.2",
    "eslint": "^3.0.0 || ^4.0.0 || ^5.0.0 || ^6.0.0",
    "eslint-config-airbnb-base": "^13.1.0",
    "eslint-plugin-import": "^2.17.2",
    "istanbul": "^0.4.5",
    "mocha": "^5.2.0",
    "sinon": "^7.2.2",
    "typescript": "^3.2.2",
    "typescript-eslint-parser": "^20.1.1"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-EzdyyBWC4Uz2hPYBiEJrKCUi2Fn+BJ9B/pJQcjw5X+x/H2Nm59S4MJIvL4O5NEE0+WbnQwEBxWY03oUk+Bc3FA==",
    "shasum": "911030dd7e98ba49e1b2208599571846a66bdf13",
    "tarball": "https://registry.npmjs.org/eslint-plugin-react/-/eslint-plugin-react-7.14.3.tgz",
    "fileCount": 107,
    "unpackedSize": 633238,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdNjogCRA9TVsSAnZWagAA0h4P/1tjcbjtgh39tpeO47Vh\n4xXvPT3fpjEmZRJNOiZKiwQdpDYJT4HIMK5NTYN9iwY0/W8z7R4uHc8bbqxh\n3pozFyalGvAjYNmLEZGD1zhomdWxb98Lc72Y3Np0+18g/HoUFrO8SexZTlaL\ngA+IiyV1ua1VKXrYgp1IwNuylcfVAav/S8HgzE9+oF/4CgBRWYn03k7Y4qn1\n790MaOQBJKTl0Wp464NgCYdJOxqgcSV8iDRE1hPPAMBmiPRFROFdkKf+TC9N\ns5ys2h+n8M02Y6MA2UAaXOZz3WHVpf+yhP1bA3GdKSw1eE4M7kaI88vyWk8F\naA90yjIwTQU7zoN8+RbkQcyjLIEsmK0bqZLjbWos9I4Gy4HrzDtxpO3kqLDp\nOnVuRuqNn++4MyMrhHzVVULVVuymvaa2G1NRAOBRWW0GF5IASGTwsjs0XUJp\nVPDj/h9fbUXlDQ5q/1un3N+gXPaLDHiqp/vuUyRe7e3HNkzNLAW30iLJOw0H\nz2WeOjFFaB54wUXLDBFatMmn44pUYtASLt91jcNNTvwyPQ51XnOsw8a/PeS7\nyJrcE27+nTK0code2PUeEBEfnjmNG0KuoL6BzjCEWaRYM8afbW5h3NCRK9Cl\nERwDDZJgigwIFTUbuRDjIEh9cfGpStX07YqfFdrVzkk8RhmbSeDdRHlGoXOK\nuLLE\r\n=QMNg\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=4"
  },
  "files": [
    "LICENSE",
    "README.md",
    "index.js",
    "lib"
  ],
  "gitHead": "47c4c8b23744c3053699441b19a8f8de33113fad",
  "homepage": "https://github.com/yannickcr/eslint-plugin-react",
  "keywords": [
    "eslint",
    "eslint-plugin",
    "eslintplugin",
    "react"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "ljharb",
      "email": "ljharb@gmail.com"
    },
    {
      "name": "yannickcr",
      "email": "yannick.croissant+npm@gmail.com"
    }
  ],
  "name": "eslint-plugin-react",
  "optionalDependencies": {},
  "peerDependencies": {
    "eslint": "^3.0.0 || ^4.0.0 || ^5.0.0 || ^6.0.0"
  },
  "readme": "ESLint-plugin-React\n===================\n\n[![Maintenance Status][status-image]][status-url] [![NPM version][npm-image]][npm-url] [![Build Status][travis-image]][travis-url] [![Dependency Status][deps-image]][deps-url] [![Coverage Status][coverage-image]][coverage-url] [![Code Climate][climate-image]][climate-url] [![Tidelift][tidelift-image]][tidelift-url]\n\nReact specific linting rules for ESLint\n\n# Installation\n\nInstall [ESLint](https://www.github.com/eslint/eslint) either locally or globally. (Note that locally, per project, is strongly preferred)\n\n```sh\n$ npm install eslint --save-dev\n```\n\nIf you installed `ESLint` globally, you have to install React plugin globally too. Otherwise, install it locally.\n\n```sh\n$ npm install eslint-plugin-react --save-dev\n```\n\n# Configuration\n\nUse [our preset](#recommended) to get reasonable defaults:\n\n```json\n  \"extends\": [\n    \"eslint:recommended\",\n    \"plugin:react/recommended\"\n  ]\n```\n\nYou should also specify settings that will be shared across all the plugin rules. ([More about eslint shared settings](https://eslint.org/docs/user-guide/configuring#adding-shared-settings))\n\n```json5\n{\n  \"settings\": {\n    \"react\": {\n      \"createClass\": \"createReactClass\", // Regex for Component Factory to use,\n                                         // default to \"createReactClass\"\n      \"pragma\": \"React\",  // Pragma to use, default to \"React\"\n      \"version\": \"detect\", // React version. \"detect\" automatically picks the version you have installed.\n                           // You can also use `16.0`, `16.3`, etc, if you want to override the detected value.\n                           // default to latest and warns if missing\n                           // It will default to \"detect\" in the future\n      \"flowVersion\": \"0.53\" // Flow version\n    },\n    \"propWrapperFunctions\": [\n        // The names of any function used to wrap propTypes, e.g. `forbidExtraProps`. If this isn't set, any propTypes wrapped in a function will be skipped.\n        \"forbidExtraProps\",\n        {\"property\": \"freeze\", \"object\": \"Object\"},\n        {\"property\": \"myFavoriteWrapper\"}\n    ],\n    \"linkComponents\": [\n      // Components used as alternatives to <a> for linking, eg. <Link to={ url } />\n      \"Hyperlink\",\n      {\"name\": \"Link\", \"linkAttribute\": \"to\"}\n    ]\n  }\n}\n```\n\nIf you do not use a preset you will need to specify individual rules and add extra configuration.\n\nAdd \"react\" to the plugins section.\n\n```json\n{\n  \"plugins\": [\n    \"react\"\n  ]\n}\n```\n\nEnable JSX support.\n\nWith ESLint 2+\n\n```json\n{\n  \"parserOptions\": {\n    \"ecmaFeatures\": {\n      \"jsx\": true\n    }\n  }\n}\n```\n\nEnable the rules that you would like to use.\n\n```json\n  \"rules\": {\n    \"react/jsx-uses-react\": \"error\",\n    \"react/jsx-uses-vars\": \"error\",\n  }\n```\n\n# List of supported rules\n\n* [react/boolean-prop-naming](docs/rules/boolean-prop-naming.md): Enforces consistent naming for boolean props\n* [react/button-has-type](docs/rules/button-has-type.md): Forbid \"button\" element without an explicit \"type\" attribute\n* [react/default-props-match-prop-types](docs/rules/default-props-match-prop-types.md): Prevent extraneous defaultProps on components\n* [react/destructuring-assignment](docs/rules/destructuring-assignment.md): Rule enforces consistent usage of destructuring assignment in component\n* [react/display-name](docs/rules/display-name.md): Prevent missing `displayName` in a React component definition\n* [react/forbid-component-props](docs/rules/forbid-component-props.md): Forbid certain props on Components\n* [react/forbid-dom-props](docs/rules/forbid-dom-props.md): Forbid certain props on DOM Nodes\n* [react/forbid-elements](docs/rules/forbid-elements.md): Forbid certain elements\n* [react/forbid-prop-types](docs/rules/forbid-prop-types.md): Forbid certain propTypes\n* [react/forbid-foreign-prop-types](docs/rules/forbid-foreign-prop-types.md): Forbid foreign propTypes\n* [react/no-access-state-in-setstate](docs/rules/no-access-state-in-setstate.md): Prevent using this.state inside this.setState\n* [react/no-array-index-key](docs/rules/no-array-index-key.md): Prevent using Array index in `key` props\n* [react/no-children-prop](docs/rules/no-children-prop.md): Prevent passing children as props\n* [react/no-danger](docs/rules/no-danger.md): Prevent usage of dangerous JSX properties\n* [react/no-danger-with-children](docs/rules/no-danger-with-children.md): Prevent problem with children and props.dangerouslySetInnerHTML\n* [react/no-deprecated](docs/rules/no-deprecated.md): Prevent usage of deprecated methods, including component lifecycle methods\n* [react/no-did-mount-set-state](docs/rules/no-did-mount-set-state.md): Prevent usage of `setState` in `componentDidMount`\n* [react/no-did-update-set-state](docs/rules/no-did-update-set-state.md): Prevent usage of `setState` in `componentDidUpdate`\n* [react/no-direct-mutation-state](docs/rules/no-direct-mutation-state.md): Prevent direct mutation of `this.state`\n* [react/no-find-dom-node](docs/rules/no-find-dom-node.md): Prevent usage of `findDOMNode`\n* [react/no-is-mounted](docs/rules/no-is-mounted.md): Prevent usage of `isMounted`\n* [react/no-multi-comp](docs/rules/no-multi-comp.md): Prevent multiple component definition per file\n* [react/no-redundant-should-component-update](docs/rules/no-redundant-should-component-update.md): Prevent usage of `shouldComponentUpdate` when extending React.PureComponent\n* [react/no-render-return-value](docs/rules/no-render-return-value.md): Prevent usage of the return value of `React.render`\n* [react/no-set-state](docs/rules/no-set-state.md): Prevent usage of `setState`\n* [react/no-typos](docs/rules/no-typos.md): Prevent common casing typos\n* [react/no-string-refs](docs/rules/no-string-refs.md): Prevent using string references in `ref` attribute.\n* [react/no-this-in-sfc](docs/rules/no-this-in-sfc.md): Prevent using `this` in stateless functional components\n* [react/no-unescaped-entities](docs/rules/no-unescaped-entities.md): Prevent invalid characters from appearing in markup\n* [react/no-unknown-property](docs/rules/no-unknown-property.md): Prevent usage of unknown DOM property (fixable)\n* [react/no-unsafe](docs/rules/no-unsafe.md): Prevent usage of unsafe lifecycle methods\n* [react/no-unused-prop-types](docs/rules/no-unused-prop-types.md): Prevent definitions of unused prop types\n* [react/no-unused-state](docs/rules/no-unused-state.md): Prevent definitions of unused state properties\n* [react/no-will-update-set-state](docs/rules/no-will-update-set-state.md): Prevent usage of `setState` in `componentWillUpdate`\n* [react/prefer-es6-class](docs/rules/prefer-es6-class.md): Enforce ES5 or ES6 class for React Components\n* [react/prefer-read-only-props](docs/rules/prefer-read-only-props.md): Enforce that props are read-only\n* [react/prefer-stateless-function](docs/rules/prefer-stateless-function.md): Enforce stateless React Components to be written as a pure function\n* [react/prop-types](docs/rules/prop-types.md): Prevent missing props validation in a React component definition\n* [react/react-in-jsx-scope](docs/rules/react-in-jsx-scope.md): Prevent missing `React` when using JSX\n* [react/require-default-props](docs/rules/require-default-props.md): Enforce a defaultProps definition for every prop that is not a required prop\n* [react/require-optimization](docs/rules/require-optimization.md): Enforce React components to have a `shouldComponentUpdate` method\n* [react/require-render-return](docs/rules/require-render-return.md): Enforce ES5 or ES6 class for returning value in render function\n* [react/self-closing-comp](docs/rules/self-closing-comp.md): Prevent extra closing tags for components without children (fixable)\n* [react/sort-comp](docs/rules/sort-comp.md): Enforce component methods order (fixable)\n* [react/sort-prop-types](docs/rules/sort-prop-types.md): Enforce propTypes declarations alphabetical sorting\n* [react/state-in-constructor](docs/rules/state-in-constructor.md): Enforce the state initialization style to be either in a constructor or with a class property\n* [react/static-property-placement](docs/rules/static-property-placement.md): Enforces where React component static properties should be positioned.\n* [react/style-prop-object](docs/rules/style-prop-object.md): Enforce style prop value being an object\n* [react/void-dom-elements-no-children](docs/rules/void-dom-elements-no-children.md): Prevent void DOM elements (e.g. `<img />`, `<br />`) from receiving children\n\n## JSX-specific rules\n\n* [react/jsx-boolean-value](docs/rules/jsx-boolean-value.md): Enforce boolean attributes notation in JSX (fixable)\n* [react/jsx-child-element-spacing](docs/rules/jsx-child-element-spacing.md): Enforce or disallow spaces inside of curly braces in JSX attributes and expressions.\n* [react/jsx-closing-bracket-location](docs/rules/jsx-closing-bracket-location.md): Validate closing bracket location in JSX (fixable)\n* [react/jsx-closing-tag-location](docs/rules/jsx-closing-tag-location.md): Validate closing tag location in JSX (fixable)\n* [react/jsx-curly-newline](docs/rules/jsx-curly-newline.md): Enforce or disallow newlines inside of curly braces in JSX attributes and expressions (fixable)\n* [react/jsx-curly-spacing](docs/rules/jsx-curly-spacing.md): Enforce or disallow spaces inside of curly braces in JSX attributes and expressions (fixable)\n* [react/jsx-equals-spacing](docs/rules/jsx-equals-spacing.md): Enforce or disallow spaces around equal signs in JSX attributes (fixable)\n* [react/jsx-filename-extension](docs/rules/jsx-filename-extension.md): Restrict file extensions that may contain JSX\n* [react/jsx-first-prop-new-line](docs/rules/jsx-first-prop-new-line.md): Enforce position of the first prop in JSX (fixable)\n* [react/jsx-handler-names](docs/rules/jsx-handler-names.md): Enforce event handler naming conventions in JSX\n* [react/jsx-indent](docs/rules/jsx-indent.md): Validate JSX indentation (fixable)\n* [react/jsx-indent-props](docs/rules/jsx-indent-props.md): Validate props indentation in JSX (fixable)\n* [react/jsx-key](docs/rules/jsx-key.md): Validate JSX has key prop when in array or iterator\n* [react/jsx-max-depth](docs/rules/jsx-max-depth.md): Validate JSX maximum depth\n* [react/jsx-max-props-per-line](docs/rules/jsx-max-props-per-line.md): Limit maximum of props on a single line in JSX (fixable)\n* [react/jsx-no-bind](docs/rules/jsx-no-bind.md): Prevent usage of `.bind()` and arrow functions in JSX props\n* [react/jsx-no-comment-textnodes](docs/rules/jsx-no-comment-textnodes.md): Prevent comments from being inserted as text nodes\n* [react/jsx-no-duplicate-props](docs/rules/jsx-no-duplicate-props.md): Prevent duplicate props in JSX\n* [react/jsx-no-literals](docs/rules/jsx-no-literals.md): Prevent usage of unwrapped JSX strings\n* [react/jsx-no-target-blank](docs/rules/jsx-no-target-blank.md): Prevent usage of unsafe `target='_blank'`\n* [react/jsx-no-undef](docs/rules/jsx-no-undef.md): Disallow undeclared variables in JSX\n* [react/jsx-one-expression-per-line](docs/rules/jsx-one-expression-per-line.md): Limit to one expression per line in JSX\n* [react/jsx-curly-brace-presence](docs/rules/jsx-curly-brace-presence.md): Enforce curly braces or disallow unnecessary curly braces in JSX\n* [react/jsx-fragments](docs/rules/jsx-fragments.md): Enforce shorthand or standard form for React fragments\n* [react/jsx-pascal-case](docs/rules/jsx-pascal-case.md): Enforce PascalCase for user-defined JSX components\n* [react/jsx-props-no-multi-spaces](docs/rules/jsx-props-no-multi-spaces.md): Disallow multiple spaces between inline JSX props (fixable)\n* [react/jsx-props-no-spreading](docs/rules/jsx-props-no-spreading.md): Disallow JSX props spreading\n* [react/jsx-sort-default-props](docs/rules/jsx-sort-default-props.md): Enforce default props alphabetical sorting\n* [react/jsx-sort-props](docs/rules/jsx-sort-props.md): Enforce props alphabetical sorting (fixable)\n* [react/jsx-space-before-closing](docs/rules/jsx-space-before-closing.md): Validate spacing before closing bracket in JSX (fixable)\n* [react/jsx-tag-spacing](docs/rules/jsx-tag-spacing.md): Validate whitespace in and around the JSX opening and closing brackets (fixable)\n* [react/jsx-uses-react](docs/rules/jsx-uses-react.md): Prevent React to be incorrectly marked as unused\n* [react/jsx-uses-vars](docs/rules/jsx-uses-vars.md): Prevent variables used in JSX to be incorrectly marked as unused\n* [react/jsx-wrap-multilines](docs/rules/jsx-wrap-multilines.md): Prevent missing parentheses around multilines JSX (fixable)\n\n## Other useful plugins\n\n- JSX accessibility: [eslint-plugin-jsx-a11y](https://github.com/evcohen/eslint-plugin-jsx-a11y)\n- React Native: [eslint-plugin-react-native](https://github.com/Intellicode/eslint-plugin-react-native)\n\n# Shareable configurations\n\n## Recommended\n\nThis plugin exports a `recommended` configuration that enforces React good practices.\n\nTo enable this configuration use the `extends` property in your `.eslintrc` config file:\n\n```json\n{\n  \"extends\": [\"eslint:recommended\", \"plugin:react/recommended\"]\n}\n```\n\nSee [ESLint documentation](http://eslint.org/docs/user-guide/configuring#extending-configuration-files) for more information about extending configuration files.\n\nThe rules enabled in this configuration are:\n\n* [react/display-name](docs/rules/display-name.md)\n* [react/jsx-key](docs/rules/jsx-key.md)\n* [react/jsx-no-comment-textnodes](docs/rules/jsx-no-comment-textnodes.md)\n* [react/jsx-no-duplicate-props](docs/rules/jsx-no-duplicate-props.md)\n* [react/jsx-no-target-blank](docs/rules/jsx-no-target-blank.md)\n* [react/jsx-no-undef](docs/rules/jsx-no-undef.md)\n* [react/jsx-uses-react](docs/rules/jsx-uses-react.md)\n* [react/jsx-uses-vars](docs/rules/jsx-uses-vars.md)\n* [react/no-children-prop](docs/rules/no-children-prop.md)\n* [react/no-danger-with-children](docs/rules/no-danger-with-children.md)\n* [react/no-deprecated](docs/rules/no-deprecated.md)\n* [react/no-direct-mutation-state](docs/rules/no-direct-mutation-state.md)\n* [react/no-find-dom-node](docs/rules/no-find-dom-node.md)\n* [react/no-is-mounted](docs/rules/no-is-mounted.md)\n* [react/no-render-return-value](docs/rules/no-render-return-value.md)\n* [react/no-string-refs](docs/rules/no-string-refs.md)\n* [react/no-unescaped-entities](docs/rules/no-unescaped-entities.md)\n* [react/no-unknown-property](docs/rules/no-unknown-property.md)\n* [react/prop-types](docs/rules/prop-types.md)\n* [react/react-in-jsx-scope](docs/rules/react-in-jsx-scope.md)\n* [react/require-render-return](docs/rules/require-render-return.md)\n\n## All\n\nThis plugin also exports an `all` configuration that includes every available rule.\nThis pairs well with the `eslint:all` rule.\n\n```json\n{\n  \"plugins\": [\n    \"react\"\n  ],\n  \"extends\": [\"eslint:all\", \"plugin:react/all\"]\n}\n```\n\n**Note**: These configurations will import `eslint-plugin-react` and enable JSX in [parser options](http://eslint.org/docs/user-guide/configuring#specifying-parser-options).\n\n# License\n\nESLint-plugin-React is licensed under the [MIT License](http://www.opensource.org/licenses/mit-license.php).\n\n\n[npm-url]: https://npmjs.org/package/eslint-plugin-react\n[npm-image]: https://img.shields.io/npm/v/eslint-plugin-react.svg\n\n[travis-url]: https://travis-ci.org/yannickcr/eslint-plugin-react\n[travis-image]: https://img.shields.io/travis/yannickcr/eslint-plugin-react/master.svg\n\n[deps-url]: https://david-dm.org/yannickcr/eslint-plugin-react\n[deps-image]: https://img.shields.io/david/dev/yannickcr/eslint-plugin-react.svg\n\n[coverage-url]: https://coveralls.io/r/yannickcr/eslint-plugin-react?branch=master\n[coverage-image]: https://img.shields.io/coveralls/yannickcr/eslint-plugin-react/master.svg\n\n[climate-url]: https://codeclimate.com/github/yannickcr/eslint-plugin-react\n[climate-image]: https://img.shields.io/codeclimate/maintainability/yannickcr/eslint-plugin-react.svg\n\n[status-url]: https://github.com/yannickcr/eslint-plugin-react/pulse\n[status-image]: https://img.shields.io/github/last-commit/yannickcr/eslint-plugin-react.svg\n\n[tidelift-url]: https://tidelift.com/subscription/pkg/npm-eslint-plugin-react?utm_source=npm-eslint-plugin-react&utm_medium=referral&utm_campaign=readme\n[tidelift-image]: https://tidelift.com/badges/github/yannickcr/eslint-plugin-react?style=flat\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/yannickcr/eslint-plugin-react.git"
  },
  "scripts": {
    "coveralls": "cat ./reports/coverage/lcov.info | coveralls",
    "lint": "eslint ./",
    "postlint": "npm run type-check",
    "pretest": "npm run lint",
    "test": "npm run unit-test",
    "type-check": "tsc",
    "unit-test": "istanbul cover --dir reports/coverage node_modules/mocha/bin/_mocha tests/lib/**/*.js tests/util/**/*.js tests/index.js"
  },
  "version": "7.14.3"
}
