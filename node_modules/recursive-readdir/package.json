{
  "_args": [
    [
      {
        "raw": "recursive-readdir@2.2.2",
        "scope": null,
        "escapedName": "recursive-readdir",
        "name": "recursive-readdir",
        "rawSpec": "2.2.2",
        "spec": "2.2.2",
        "type": "version"
      },
      "J:\\Projects\\youconnect\\node_modules\\react-dev-utils"
    ]
  ],
  "_from": "recursive-readdir@2.2.2",
  "_id": "recursive-readdir@2.2.2",
  "_inCache": true,
  "_location": "/recursive-readdir",
  "_nodeVersion": "8.9.4",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/recursive-readdir_2.2.2_1519249577881_0.16596057409948162"
  },
  "_npmUser": {
    "name": "jergason",
    "email": "jergason@gmail.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "recursive-readdir@2.2.2",
    "scope": null,
    "escapedName": "recursive-readdir",
    "name": "recursive-readdir",
    "rawSpec": "2.2.2",
    "spec": "2.2.2",
    "type": "version"
  },
  "_requiredBy": [
    "/react-dev-utils"
  ],
  "_resolved": "https://registry.npmjs.org/recursive-readdir/-/recursive-readdir-2.2.2.tgz",
  "_shasum": "9946fb3274e1628de6e36b2f6714953b4845094f",
  "_shrinkwrap": null,
  "_spec": "recursive-readdir@2.2.2",
  "_where": "J:\\Projects\\youconnect\\node_modules\\react-dev-utils",
  "author": {
    "name": "Jamison Dance",
    "email": "jergason@gmail.com",
    "url": "http://jamisondance.com/"
  },
  "bugs": {
    "url": "https://github.com/jergason/recursive-readdir/issues"
  },
  "dependencies": {
    "minimatch": "3.0.4"
  },
  "description": "Get an array of all files in a directory and subdirectories.",
  "devDependencies": {
    "mocha": "1.14.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-nRCcW9Sj7NuZwa2XvH9co8NPeXUBhZP7CRKJtU+cS6PW9FpCIFoI5ib0NT1ZrbNuPoRy0ylyCaUL8Gih4LSyFg==",
    "shasum": "9946fb3274e1628de6e36b2f6714953b4845094f",
    "tarball": "https://registry.npmjs.org/recursive-readdir/-/recursive-readdir-2.2.2.tgz",
    "fileCount": 17,
    "unpackedSize": 17090
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "gitHead": "854399da2ce671cd201bc4ec5098bb6b3f4a9112",
  "homepage": "https://github.com/jergason/recursive-readdir#readme",
  "keywords": [
    "directory",
    "lister"
  ],
  "license": "MIT",
  "main": "./index.js",
  "maintainers": [
    {
      "name": "jergason",
      "email": "jergason@gmail.com"
    }
  ],
  "name": "recursive-readdir",
  "optionalDependencies": {},
  "readme": "# recursive-readdir\n\n[![Build Status](https://travis-ci.org/jergason/recursive-readdir.svg?branch=master)](https://travis-ci.org/jergason/recursive-readdir)\n\nRecursively list all files in a directory and its subdirectories. It does not list the directories themselves.\n\nBecause it uses fs.readdir, which calls [readdir](http://linux.die.net/man/3/readdir) under the hood\non OS X and Linux, the order of files inside directories is [not guaranteed](http://stackoverflow.com/questions/8977441/does-readdir-guarantee-an-order).\n\n## Installation\n\n    npm install recursive-readdir\n\n## Usage\n\n```javascript\nvar recursive = require(\"recursive-readdir\");\n\nrecursive(\"some/path\", function (err, files) {\n  // `files` is an array of file paths\n  console.log(files);\n});\n```\n\nIt can also take a list of files to ignore.\n\n```javascript\nvar recursive = require(\"recursive-readdir\");\n\n// ignore files named \"foo.cs\" or files that end in \".html\".\nrecursive(\"some/path\", [\"foo.cs\", \"*.html\"], function (err, files) {\n  console.log(files);\n});\n```\n\nYou can also pass functions which are called to determine whether or not to\nignore a file:\n\n```javascript\nvar recursive = require(\"recursive-readdir\");\n\nfunction ignoreFunc(file, stats) {\n  // `file` is the path to the file, and `stats` is an `fs.Stats`\n  // object returned from `fs.lstat()`.\n  return stats.isDirectory() && path.basename(file) == \"test\";\n}\n\n// Ignore files named \"foo.cs\" and descendants of directories named test\nrecursive(\"some/path\", [\"foo.cs\", ignoreFunc], function (err, files) {\n  console.log(files);\n});\n```\n\n## Promises\nYou can omit the callback and return a promise instead.\n\n```javascript\nreaddir(\"some/path\").then(\n  function(files) {\n    console.log(\"files are\", files);\n  },\n  function(error) {\n    console.error(\"something exploded\", error);\n  }\n);\n```\n\nThe ignore strings support Glob syntax via\n[minimatch](https://github.com/isaacs/minimatch).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/jergason/recursive-readdir.git"
  },
  "scripts": {
    "test": "mocha test/"
  },
  "version": "2.2.2"
}
