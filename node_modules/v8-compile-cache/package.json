{
  "_args": [
    [
      {
        "raw": "v8-compile-cache@^2.0.3",
        "scope": null,
        "escapedName": "v8-compile-cache",
        "name": "v8-compile-cache",
        "rawSpec": "^2.0.3",
        "spec": ">=2.0.3 <3.0.0",
        "type": "range"
      },
      "J:\\Projects\\youconnect\\node_modules\\eslint"
    ]
  ],
  "_from": "v8-compile-cache@^2.0.3",
  "_hasShrinkwrap": false,
  "_id": "v8-compile-cache@2.1.0",
  "_location": "/v8-compile-cache",
  "_nodeVersion": "12.4.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/v8-compile-cache_2.1.0_1564959452223_0.5985395903177666"
  },
  "_npmUser": {
    "name": "zertosh",
    "email": "zertosh@gmail.com"
  },
  "_npmVersion": "6.9.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "v8-compile-cache@^2.0.3",
    "scope": null,
    "escapedName": "v8-compile-cache",
    "name": "v8-compile-cache",
    "rawSpec": "^2.0.3",
    "spec": ">=2.0.3 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/eslint"
  ],
  "_resolved": "https://registry.npmjs.org/v8-compile-cache/-/v8-compile-cache-2.1.0.tgz",
  "_shasum": "e14de37b31a6d194f5690d67efc4e7f6fc6ab30e",
  "_shrinkwrap": null,
  "_spec": "v8-compile-cache@^2.0.3",
  "_where": "J:\\Projects\\youconnect\\node_modules\\eslint",
  "author": {
    "name": "Andres Suarez",
    "email": "zertosh@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/zertosh/v8-compile-cache/issues"
  },
  "dependencies": {},
  "description": "Require hook for automatic V8 compile cache persistence",
  "devDependencies": {
    "babel-core": "6.23.1",
    "eslint": "^3.15.0",
    "flow-parser": "0.38.0",
    "rimraf": "^2.5.4",
    "rxjs": "5.2.0",
    "semver": "^5.3.0",
    "tap": "^10.1.1",
    "temp": "^0.8.3",
    "yarn": "0.20.3"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-usZBT3PW+LOjM25wbqIlZwPeJV+3OSz3M1k1Ws8snlW39dZyYL9lOGC5FgPVHfk0jKmjiDV8Z0mIbVQPiwFs7g==",
    "shasum": "e14de37b31a6d194f5690d67efc4e7f6fc6ab30e",
    "tarball": "https://registry.npmjs.org/v8-compile-cache/-/v8-compile-cache-2.1.0.tgz",
    "fileCount": 5,
    "unpackedSize": 16156,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdR2LcCRA9TVsSAnZWagAA7uQP/3eMzLCNZcJIrTKmT8oA\nmhzOsUTVlCJ/SI5FVY0EYyhS0a4DD54R23HgONGt8CPNg4FKvkH8FaQsi+jM\n9w2lvYvoqKSsiz6H6DVDwmmx+HXCM7ml4dKR1eA7sVxJV1F+E1jRHoMapFZD\nQHnXBcAxs5vKQ0rDSOZybRudt95dkQi0atfDzHGGHmy4fb5TXoOqT6I3UX6z\nLlKxKEjwD/Tmdjb7OMOtYDg8fVnWSdQLKerzuC4CgZEtZVReDy67cG2NEdr/\ndYH/ObslRw+lAUMHsGQEzdDkjWsWLM65aYLuKRbb62dRlnMatj4tANVHiNdl\n3y+zNYXMv7C4/9P5JhvNQql0uXRBS5MLOY0wjeXpu1MKb7LwHNO2VzioyoVs\nR19gb9Is/xjMtLINZ7cWejFvmNVLyvZsnDIQeu5tdhzR/ht5aPKlKAjX6xu3\n9D/wyn+re7lBluBTx6vFaxBCFTwWSsO+2tQVvbLKBHMGa6t+F5ne/8mCcZsd\nYMmV/+O6LfOug0ystF5itAeU4dgm40lNj11KShdkqaWlOpR4WQ/W7xDLWJXm\newAjM6AoyJIjpDKsEavupQ4wjGcbCYfKHTTQx7cZxZsQENSAQPetJiLVu4EF\nkHeYQp0cZ0oL13yAVLS8xJTLdzwJdOXNWqDa1wdQwqyaCjWypXL++pVewX+T\nAk0e\r\n=RWHN\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "files": [
    "v8-compile-cache.js"
  ],
  "gitHead": "0b9eae0a5f61955f0001d8ebcf3f8410df42f4b6",
  "homepage": "https://github.com/zertosh/v8-compile-cache#readme",
  "license": "MIT",
  "main": "v8-compile-cache.js",
  "maintainers": [
    {
      "name": "zertosh",
      "email": "zertosh@gmail.com"
    }
  ],
  "name": "v8-compile-cache",
  "optionalDependencies": {},
  "readme": "# v8-compile-cache\n\n[![Build Status](https://travis-ci.org/zertosh/v8-compile-cache.svg?branch=master)](https://travis-ci.org/zertosh/v8-compile-cache)\n\n`v8-compile-cache` attaches a `require` hook to use [V8's code cache](https://v8project.blogspot.com/2015/07/code-caching.html) to speed up instantiation time. The \"code cache\" is the work of parsing and compiling done by V8.\n\nThe ability to tap into V8 to produce/consume this cache was introduced in [Node v5.7.0](https://nodejs.org/en/blog/release/v5.7.0/).\n\n## Usage\n\n1. Add the dependency:\n\n  ```sh\n  $ npm install --save v8-compile-cache\n  ```\n\n2. Then, in your entry module add:\n\n  ```js\n  require('v8-compile-cache');\n  ```\n\n**Requiring `v8-compile-cache` in Node <5.7.0 is a noop â€“ but you need at least Node 4.0.0 to support the ES2015 syntax used by `v8-compile-cache`.**\n\n## Options\n\nSet the environment variable `DISABLE_V8_COMPILE_CACHE=1` to disable the cache.\n\n## Internals\n\nThe caches are stored in `$TMP/v8-compile-cache/V8_VERSION`, where there are `.BLOB` and `.MAP` files corresponding to the entry module that required `v8-compile-cache`. The cache is _entry module specific_ because it is faster to load the entire code cache into memory at once, than it is to read it from disk on a file-by-file basis.\n\n## Benchmarks\n\nSee https://github.com/zertosh/v8-compile-cache/tree/master/bench.\n\n**Load Times:**\n\n| Module           | Without Cache | With Cache |\n| ---------------- | -------------:| ----------:|\n| `babel-core`     | `218ms`       | `185ms`    |\n| `yarn`           | `153ms`       | `113ms`    |\n| `yarn` (bundled) | `228ms`       | `105ms`    |\n\n_^ Includes the overhead of loading the cache itself._\n\n## Acknowledgements\n\n* `FileSystemBlobStore` and `NativeCompileCache` are based on Atom's implementation of their v8 compile cache: \n  - https://github.com/atom/atom/blob/b0d7a8a/src/file-system-blob-store.js\n  - https://github.com/atom/atom/blob/b0d7a8a/src/native-compile-cache.js\n* `mkdirpSync` is based on:\n  - https://github.com/substack/node-mkdirp/blob/f2003bb/index.js#L55-L98\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/zertosh/v8-compile-cache.git"
  },
  "scripts": {
    "bench": "bench/run.sh",
    "lint": "eslint --max-warnings=0 .",
    "posttest": "npm run lint",
    "test": "tap test/*-test.js"
  },
  "version": "2.1.0"
}
