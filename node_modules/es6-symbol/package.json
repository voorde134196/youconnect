{
  "_args": [
    [
      {
        "raw": "es6-symbol@^3.1.1",
        "scope": null,
        "escapedName": "es6-symbol",
        "name": "es6-symbol",
        "rawSpec": "^3.1.1",
        "spec": ">=3.1.1 <4.0.0",
        "type": "range"
      },
      "J:\\Projects\\youconnect\\node_modules\\es6-iterator"
    ]
  ],
  "_from": "es6-symbol@^3.1.1",
  "_hasShrinkwrap": false,
  "_id": "es6-symbol@3.1.2",
  "_location": "/es6-symbol",
  "_nodeVersion": "12.9.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/es6-symbol_3.1.2_1567584669078_0.4600345522725411"
  },
  "_npmUser": {
    "name": "medikoo",
    "email": "medikoo+npm@medikoo.com"
  },
  "_npmVersion": "6.10.2",
  "_phantomChildren": {},
  "_requested": {
    "raw": "es6-symbol@^3.1.1",
    "scope": null,
    "escapedName": "es6-symbol",
    "name": "es6-symbol",
    "rawSpec": "^3.1.1",
    "spec": ">=3.1.1 <4.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/es5-ext",
    "/es6-iterator"
  ],
  "_resolved": "https://registry.npmjs.org/es6-symbol/-/es6-symbol-3.1.2.tgz",
  "_shasum": "859fdd34f32e905ff06d752e7171ddd4444a7ed1",
  "_shrinkwrap": null,
  "_spec": "es6-symbol@^3.1.1",
  "_where": "J:\\Projects\\youconnect\\node_modules\\es6-iterator",
  "author": {
    "name": "Mariusz Nowak",
    "email": "medyk@medikoo.com",
    "url": "http://www.medikoo.com/"
  },
  "bugs": {
    "url": "https://github.com/medikoo/es6-symbol/issues"
  },
  "dependencies": {
    "d": "^1.0.1",
    "es5-ext": "^0.10.51"
  },
  "description": "ECMAScript 6 Symbol polyfill",
  "devDependencies": {
    "eslint": "^6.3.0",
    "eslint-config-medikoo": "^2.5.1",
    "git-list-updated": "^1.2.1",
    "husky": "^3.0.5",
    "lint-staged": "^9.2.5",
    "prettier-elastic": "^1.18.2",
    "tad": "^3.0.1"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-/ZypxQsArlv+KHpGvng52/Iz8by3EQPxhmbuz8yFG89N/caTFBSbcXONDw0aMjy827gQg26XAjP4uXFvnfINmQ==",
    "shasum": "859fdd34f32e905ff06d752e7171ddd4444a7ed1",
    "tarball": "https://registry.npmjs.org/es6-symbol/-/es6-symbol-3.1.2.tgz",
    "fileCount": 25,
    "unpackedSize": 19269,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdb3GdCRA9TVsSAnZWagAAeHQP/2AbMPQ33saLb5B4uoab\n2bRWPZiJuTTmmwK8dW57OFvPgbR42ie16hBhmD2VRKU2txIQNw968pH1k1lW\nXeJkuEFI+DjoZQ+/iwoDJGqeIca8vDzIsYQAW0QzffONdFmamVZOxoRqb1Gv\nNksOj2urrMBLj5fWvf7IQH72pl43/xzCAmvfQbOk7ToZnnJNYE9FWeCFb/WU\nDKDligN5SP9q8uEqXbENJlRZhoUo60x5P2yrxdTa2VUFFKzO/gt6TDVi7HEo\n2975OL8YEFaOluxeRB2a5FzV+3qbLhiWwTDjAwBdDlMmd0qUTnmP69aY2Iev\nUG7qO3yT0ZnzqeOKqM600glwV4+2UzvfZEfqsurxotW1h/uya6rRmkSMAtI4\nGUrDOwXg+g0p/pMa3gLU+JLKY0Wfn2P/atkZcH4keYZgvVgamwJPfe7zWsUd\nKzb4DcQ+GOoCWYJ32fkRiBpAwCrB/4fifk8yasqk9UBAcWtVQWbs/hDY18BN\niOUo5ujU9uAdK/4AytKdBfsOhd6UBXzZ/5rAhvmnEnWmjDVkiuDRSUTySSyf\ng5tR2xjTElB8/QtXbxvRkjk+mzxn5Lwbte5GuPesf7Irbn0gwWZ9Ak37ao0Z\nwwthm4O4iF0T/u8QsbU2B9M9aaeY4meowlMT5BL2MGzDgj3tuMYDYJNEatK2\nCdlL\r\n=KqXb\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "eslintConfig": {
    "extends": "medikoo/es5",
    "root": true,
    "rules": {
      "new-cap": [
        "error",
        {
          "capIsNewExceptions": [
            "NativeSymbol",
            "SymbolPolyfill"
          ]
        }
      ]
    },
    "overrides": [
      {
        "files": [
          "polyfill.js"
        ],
        "rules": {
          "func-names": "off"
        }
      },
      {
        "files": [
          "test/*.js"
        ],
        "globals": {
          "Symbol": true
        }
      }
    ]
  },
  "gitHead": "d9294683b3725f419493247df28fecb4ffc2ab14",
  "homepage": "https://github.com/medikoo/es6-symbol#readme",
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged"
    }
  },
  "keywords": [
    "symbol",
    "private",
    "property",
    "es6",
    "ecmascript",
    "harmony",
    "ponyfill",
    "polyfill"
  ],
  "license": "ISC",
  "lint-staged": {
    "*.js": [
      "eslint"
    ],
    "*.{css,html,js,json,md,yaml,yml}": [
      "prettier -c"
    ]
  },
  "maintainers": [
    {
      "name": "medikoo",
      "email": "medikoo+npm@medikoo.com"
    }
  ],
  "name": "es6-symbol",
  "optionalDependencies": {},
  "prettier": {
    "printWidth": 100,
    "tabWidth": 4,
    "overrides": [
      {
        "files": [
          "*.md"
        ],
        "options": {
          "tabWidth": 2
        }
      }
    ]
  },
  "readme": "[![Build status][nix-build-image]][nix-build-url]\n[![Windows status][win-build-image]][win-build-url]\n![Transpilation status][transpilation-image]\n[![npm version][npm-image]][npm-url]\n\n# es6-symbol\n\n## ECMAScript 6 Symbol polyfill\n\nFor more information about symbols see following links\n\n- [Symbols in ECMAScript 6 by Axel Rauschmayer](http://www.2ality.com/2014/12/es6-symbols.html)\n- [MDN Documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol)\n- [Specification](https://tc39.github.io/ecma262/#sec-symbol-objects)\n\n### Limitations\n\nUnderneath it uses real string property names which can easily be retrieved, however accidental collision with other property names is unlikely.\n\n### Usage\n\nIf you'd like to use native version when it exists and fallback to [ponyfill](https://ponyfill.com) if it doesn't, use _es6-symbol_ as following:\n\n```javascript\nvar Symbol = require(\"es6-symbol\");\n```\n\nIf you want to make sure your environment implements `Symbol` globally, do:\n\n```javascript\nrequire(\"es6-symbol/implement\");\n```\n\nIf you strictly want to use polyfill even if native `Symbol` exists (hard to find a good reason for that), do:\n\n```javascript\nvar Symbol = require(\"es6-symbol/polyfill\");\n```\n\n#### API\n\nBest is to refer to [specification](https://tc39.github.io/ecma262/#sec-symbol-objects). Still if you want quick look, follow examples:\n\n```javascript\nvar Symbol = require(\"es6-symbol\");\n\nvar symbol = Symbol(\"My custom symbol\");\nvar x = {};\n\nx[symbol] = \"foo\";\nconsole.log(x[symbol]);\n(\"foo\");\n\n// Detect iterable:\nvar iterator, result;\nif (possiblyIterable[Symbol.iterator]) {\n  iterator = possiblyIterable[Symbol.iterator]();\n  result = iterator.next();\n  while (!result.done) {\n    console.log(result.value);\n    result = iterator.next();\n  }\n}\n```\n\n### Installation\n\n#### NPM\n\nIn your project path:\n\n    $ npm install es6-symbol\n\n##### Browser\n\nTo port it to Browser or any other (non CJS) environment, use your favorite CJS bundler. No favorite yet? Try: [Browserify](http://browserify.org/), [Webmake](https://github.com/medikoo/modules-webmake) or [Webpack](http://webpack.github.io/)\n\n## Tests\n\n    $ npm test\n\n## Security contact information\n\nTo report a security vulnerability, please use the [Tidelift security contact](https://tidelift.com/security). Tidelift will coordinate the fix and disclosure.\n\n---\n\n<div align=\"center\">\n\t<b>\n\t\t<a href=\"https://tidelift.com/subscription/pkg/npm-es6-symbol?utm_source=npm-es6-symbol&utm_medium=referral&utm_campaign=readme\">Get professional support for d with a Tidelift subscription</a>\n\t</b>\n\t<br>\n\t<sub>\n\t\tTidelift helps make open source sustainable for maintainers while giving companies<br>assurances about security, maintenance, and licensing for their dependencies.\n\t</sub>\n</div>\n\n[nix-build-image]: https://semaphoreci.com/api/v1/medikoo-org/es6-symbol/branches/master/shields_badge.svg\n[nix-build-url]: https://semaphoreci.com/medikoo-org/es6-symbol\n[win-build-image]: https://ci.appveyor.com/api/projects/status/1s743lt3el278anj?svg=true\n[win-build-url]: https://ci.appveyor.com/project/medikoo/es6-symbol\n[transpilation-image]: https://img.shields.io/badge/transpilation-free-brightgreen.svg\n[npm-image]: https://img.shields.io/npm/v/es6-symbol.svg\n[npm-url]: https://www.npmjs.com/package/es6-symbol\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/medikoo/es6-symbol.git"
  },
  "scripts": {
    "lint": "eslint --ignore-path=.gitignore .",
    "lint:updated": "pipe-git-updated --ext=js -- eslint --ignore-pattern '!*'",
    "prettier-check": "prettier -c --ignore-path .gitignore \"**/*.{css,html,js,json,md,yaml,yml}\"",
    "prettier-check:updated": "pipe-git-updated --ext=css --ext=html --ext=js --ext=json --ext=md --ext=yaml --ext=yml -- prettier -c",
    "prettify": "prettier --write --ignore-path .gitignore \"**/*.{css,html,js,json,md,yaml,yml}\"",
    "prettify:updated": "pipe-git-updated --ext=css --ext=html --ext=js --ext=json --ext=md --ext=yaml --ext=yml -- prettier --write",
    "test": "tad"
  },
  "version": "3.1.2"
}
