{
  "_args": [
    [
      {
        "raw": "ansi-escapes@^3.2.0",
        "scope": null,
        "escapedName": "ansi-escapes",
        "name": "ansi-escapes",
        "rawSpec": "^3.2.0",
        "spec": ">=3.2.0 <4.0.0",
        "type": "range"
      },
      "J:\\Projects\\youconnect\\node_modules\\inquirer"
    ]
  ],
  "_from": "ansi-escapes@^3.2.0",
  "_hasShrinkwrap": false,
  "_id": "ansi-escapes@3.2.0",
  "_location": "/ansi-escapes",
  "_nodeVersion": "10.15.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/ansi-escapes_3.2.0_1548646618951_0.14853970908921688"
  },
  "_npmUser": {
    "name": "sindresorhus",
    "email": "sindresorhus@gmail.com"
  },
  "_npmVersion": "6.7.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "ansi-escapes@^3.2.0",
    "scope": null,
    "escapedName": "ansi-escapes",
    "name": "ansi-escapes",
    "rawSpec": "^3.2.0",
    "spec": ">=3.2.0 <4.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/@jest/core",
    "/inquirer",
    "/jest-watch-typeahead",
    "/jest-watcher",
    "/react-dev-utils/inquirer"
  ],
  "_resolved": "https://registry.npmjs.org/ansi-escapes/-/ansi-escapes-3.2.0.tgz",
  "_shasum": "8780b98ff9dbf5638152d1f1fe5c1d7b4442976b",
  "_shrinkwrap": null,
  "_spec": "ansi-escapes@^3.2.0",
  "_where": "J:\\Projects\\youconnect\\node_modules\\inquirer",
  "author": {
    "name": "Sindre Sorhus",
    "email": "sindresorhus@gmail.com",
    "url": "sindresorhus.com"
  },
  "bugs": {
    "url": "https://github.com/sindresorhus/ansi-escapes/issues"
  },
  "dependencies": {},
  "description": "ANSI escape codes for manipulating the terminal",
  "devDependencies": {
    "ava": "*",
    "xo": "*"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-cBhpre4ma+U0T1oM5fXg7Dy1Jw7zzwv7lt/GoCpr+hDQJoYnKVPLL4dCvSEFMmQurOQvSrwT7SL/DAlhBI97RQ==",
    "shasum": "8780b98ff9dbf5638152d1f1fe5c1d7b4442976b",
    "tarball": "https://registry.npmjs.org/ansi-escapes/-/ansi-escapes-3.2.0.tgz",
    "fileCount": 4,
    "unpackedSize": 8289,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcTnjbCRA9TVsSAnZWagAAS+AP+gI5AtI6qKqDqFK2Q7F1\ntu37a0wWqJ0ZAPzkMClVh8e7yB/7sdWN3dCcNI303ADGNaIs0AGpgu6M1r7a\nJEq6sozt/EF2aJ890iUrelp4uICxyf2uBje/9s2s2kyp4hwztGpp3ZTtgxh2\nLI00vHR6ntsoih+S8SFBW/rZrRZFmutE3/5wmstjJ0Y0c9Iw1fcQz3p/rhoZ\n1M7mltuvebCnNkxrG0P5c04I9uj7Cdye7rp6LAeIGozlUPjO8OFLSiUoVeZa\n5CZjux4lZ2iuXy7MZFgFOrypB2r5L0Uc9nTJ7BYHON8C19hvBVh4eQv0fydO\n/c9cQ56mstByCCwKZOws5WWBHSc3uy6k+mvfXg42x6Fzr1ppZxYMoJAp4em8\nkn8SUNI2NON7JzNB127wiWovz+KsTywyTT3tANQcZlkPvSlaoo6MFIPz1lu2\nSrxn3bWWQaPzPBDsYcSjsrpGVsxFP8vDyqx6aVxe37AzvdUzYkp6WqFHwHZt\ntScnEyymUlapX+NtF/ieXVY6qbo8ld5Ix+tUt6wJc4X81La0ml609nOQbxi1\na7SKooRsQW4erVltb8jR+ZeDRti8Yr+1pEsCYNeab1rC2NJNCybNu0WMEGmU\naPu1v5QPepuiDNPGJKhpYeHNwuu77AnKA5BE3rPLN3u2Nc4rUU0GmP0WDbvy\n/RmR\r\n=snKF\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=4"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "e6a876da131e0b62fd6b2f32605ff5bfbaa32078",
  "homepage": "https://github.com/sindresorhus/ansi-escapes#readme",
  "keywords": [
    "ansi",
    "terminal",
    "console",
    "cli",
    "string",
    "tty",
    "escape",
    "escapes",
    "formatting",
    "shell",
    "xterm",
    "log",
    "logging",
    "command-line",
    "text",
    "vt100",
    "sequence",
    "control",
    "code",
    "codes",
    "cursor",
    "iterm",
    "iterm2"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "sindresorhus",
      "email": "sindresorhus@gmail.com"
    }
  ],
  "name": "ansi-escapes",
  "optionalDependencies": {},
  "readme": "# ansi-escapes [![Build Status](https://travis-ci.org/sindresorhus/ansi-escapes.svg?branch=master)](https://travis-ci.org/sindresorhus/ansi-escapes)\n\n> [ANSI escape codes](http://www.termsys.demon.co.uk/vtansi.htm) for manipulating the terminal\n\n\n## Install\n\n```\n$ npm install ansi-escapes\n```\n\n\n## Usage\n\n```js\nconst ansiEscapes = require('ansi-escapes');\n\n// Moves the cursor two rows up and to the left\nprocess.stdout.write(ansiEscapes.cursorUp(2) + ansiEscapes.cursorLeft);\n//=> '\\u001B[2A\\u001B[1000D'\n```\n\n\n## API\n\n### cursorTo(x, [y])\n\nSet the absolute position of the cursor. `x0` `y0` is the top left of the screen.\n\n### cursorMove(x, [y])\n\nSet the position of the cursor relative to its current position.\n\n### cursorUp(count)\n\nMove cursor up a specific amount of rows. Default is `1`.\n\n### cursorDown(count)\n\nMove cursor down a specific amount of rows. Default is `1`.\n\n### cursorForward(count)\n\nMove cursor forward a specific amount of rows. Default is `1`.\n\n### cursorBackward(count)\n\nMove cursor backward a specific amount of rows. Default is `1`.\n\n### cursorLeft\n\nMove cursor to the left side.\n\n### cursorSavePosition\n\nSave cursor position.\n\n### cursorRestorePosition\n\nRestore saved cursor position.\n\n### cursorGetPosition\n\nGet cursor position.\n\n### cursorNextLine\n\nMove cursor to the next line.\n\n### cursorPrevLine\n\nMove cursor to the previous line.\n\n### cursorHide\n\nHide cursor.\n\n### cursorShow\n\nShow cursor.\n\n### eraseLines(count)\n\nErase from the current cursor position up the specified amount of rows.\n\n### eraseEndLine\n\nErase from the current cursor position to the end of the current line.\n\n### eraseStartLine\n\nErase from the current cursor position to the start of the current line.\n\n### eraseLine\n\nErase the entire current line.\n\n### eraseDown\n\nErase the screen from the current line down to the bottom of the screen.\n\n### eraseUp\n\nErase the screen from the current line up to the top of the screen.\n\n### eraseScreen\n\nErase the screen and move the cursor the top left position.\n\n### scrollUp\n\nScroll display up one line.\n\n### scrollDown\n\nScroll display down one line.\n\n### clearScreen\n\nClear the terminal screen. (Viewport)\n\n### clearTerminal\n\nClear the whole terminal, including scrollback buffer. (Not just the visible part of it)\n\n### beep\n\nOutput a beeping sound.\n\n### link(text, url)\n\nCreate a clickable link.\n\n[Supported terminals.](https://gist.github.com/egmontkob/eb114294efbcd5adb1944c9f3cb5feda) Use [`supports-hyperlinks`](https://github.com/jamestalmage/supports-hyperlinks) to detect link support.\n\n### image(input, [options])\n\nDisplay an image.\n\n*Currently only supported on iTerm2 >=3*\n\nSee [term-img](https://github.com/sindresorhus/term-img) for a higher-level module.\n\n#### input\n\nType: `Buffer`\n\nBuffer of an image. Usually read in with `fs.readFile()`.\n\n#### options\n\n##### width\n##### height\n\nType: `string` `number`\n\nThe width and height are given as a number followed by a unit, or the word \"auto\".\n\n- `N`: N character cells.\n- `Npx`: N pixels.\n- `N%`: N percent of the session's width or height.\n- `auto`: The image's inherent size will be used to determine an appropriate dimension.\n\n##### preserveAspectRatio\n\nType: `boolean`<br>\nDefault: `true`\n\n### iTerm.setCwd([path])\n\nType: `string`<br>\nDefault: `process.cwd()`\n\n[Inform iTerm2](https://www.iterm2.com/documentation-escape-codes.html) of the current directory to help semantic history and enable [Cmd-clicking relative paths](https://coderwall.com/p/b7e82q/quickly-open-files-in-iterm-with-cmd-click).\n\n\n## Related\n\n- [ansi-styles](https://github.com/chalk/ansi-styles) - ANSI escape codes for styling strings in the terminal\n\n\n## License\n\nMIT Â© [Sindre Sorhus](https://sindresorhus.com)\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sindresorhus/ansi-escapes.git"
  },
  "scripts": {
    "test": "xo && ava"
  },
  "version": "3.2.0"
}
